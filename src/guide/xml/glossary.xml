<glossary xmlns="http://docbook.org/ns/docbook" version="5.0"
	  xmlns:xlink="http://www.w3.org/1999/xlink"
          xml:id="glossary">
<?db filename="glossary"?>
<title>Glossary</title>

<glossentry>
<glossterm>hamburger menu</glossterm>
<glossdef>
<para>The “hamburger menu” or
“<link xlink:href="https://en.wikipedia.org/wiki/Hamburger_button">hamburger
button</link>” is the name for the “☰” icon often used to indicate a menu of choices.
</para>
</glossdef>
</glossentry>

<glossentry>
<glossterm>intrinsic size</glossterm>
<glossdef>
<para>The intrinsic size of an object is it’s actual size, measured in absolute
units, usually pixels. The stylesheets rely on extension functions to obtain
the intrinsic size of objects; if the extension functions aren’t available or the
image format is not recognized, no intrinsic size will be known.</para>
</glossdef>
</glossentry>

<glossentry>
<glossterm>object</glossterm>
<glossdef>
<para>In this guide, the term “object” is used to refer generally to
any image, video, or audio media element. They have a width and a height but no
useful internal structure from the perspective of the stylesheets.
</para>
</glossdef>
</glossentry>

<glossentry>
<glossterm>pseudo-attribute</glossterm>
<glossdef>
<para>Processing instructions (see <biblioref linkend="XML"/>) have no
internal structure. The stylesheets interrogate the
<tag class="pi">db</tag><indexterm><primary>db processing instruction</primary>
</indexterm> processing instruction to determine formatting properties
for a number of different elements.</para>
<para>In order to make it easy to consistently specify different properties,
the value of the processing instruction is parsed as if it contained
attributes. These <emphasis>pseudo-attributes</emphasis> must consist of
a name, followed by “<literal>=</literal>”, followed by a quoted string.</para>
</glossdef>
</glossentry>

<glossentry>
<glossterm>is true</glossterm>
<glossdef>
<para>XPath defines a boolean type, <type>xs:boolean</type>, that is either
true or false. But for the purpose of passing parameters to the stylesheet
at runtime, whether it’s from the command line, from a configuration file, or
through some other means, it’s often more convenient to pass string values.
This saves the user from having to use whatever extra syntactic mechanisms
would be required to identify the type of the variable.</para>
<para>To this end, many “boolean” parameters are actually strings. A string
value <literal>is true</literal> if it consists of one of the strings “true”,
“yes”, or “1”.</para>
</glossdef>
</glossentry>

<glossentry>
<glossterm>Clark name</glossterm>
<glossdef>
<para>A Clark name is a way of unambiguously representing a qualified
name (see <biblioref linkend="XML"/>) as a string. It consists of the
namespace name in curly braces followed immediately by the local name.
For example, the Clark name for the DocBook <tag>para</tag> element
is: “<literal>{http://docbook.org/ns/docbook}para</literal>”.</para>
</glossdef>
</glossentry>

</glossary>

